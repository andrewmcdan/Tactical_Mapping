name: Build on Commit Teensy
on:
  push:
    branches: [ "main" ]
    paths: [ "Teensy_4.0/*","teensy_4.0TEST/*" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "Teensy_4.0/*" ]
env:
  # It's convenient to set variables for values used multiple times in the workflow
  SKETCHES_REPORTS_PATH: sketches-reports
  SKETCHES_REPORTS_ARTIFACT_NAME: sketches-reports
  SKETCHES_REPORTS_REPO: ArduinoBuildReports
  GITHUB_USERNAME: andrewmcdan
  GITHUB_EMAIL: andrewmcdan@gmail.com
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Compile Arduino Sketches
      #uses: arduino/compile-sketches@v1.1.0
      uses: andrewmcdan/arduino-compile-sketches@v1.1
      with:
        platforms: |
          - name: "teensy:avr"
            source-url: "https://www.pjrc.com/teensy/package_teensy_index.json"
        fqbn: teensy:avr:teensy40
        libraries: |
          - name: "Adafruit BusIO"
          - name: "Adafruit GFX Library"
          - name: "Adafruit SSD1306"
          - name: "Adafruit GPS Library"
          - name: "Encoder"
          - name: "Adafruit BluefruitLE nRF51"
        verbose: true
        enable-warnings-report: true
        sketch-paths: |
          - Teensy_4.0
          - teensy_4.0TEST
        sketches-report-path: ${{ env.SKETCHES_REPORTS_PATH }}
        enable-deltas-report: true
        github-token: ${{ secrets.GITHUBTOKEN }}
    
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}
        path: ${{ env.SKETCHES_REPORTS_PATH }}

    - name: Install jq for JSON parsing
      run: |
        sudo apt-get install jq

    - name: Read JSON, interpret, clone ${{ env.SKETCHES_REPORTS_REPO }}, update, commit, and push
      run: |
        git config --global user.name ${{ env.GITHUB_USERNAME }}
        git config --global user.email ${{ env.GITHUB_EMAIL }}
        git config --global credential.helper 'store --file ~/.git-credentials'
        git credential-store --file ~/.git-credentials store
        
        echo "https://${{ env.GITHUB_USERNAME }}:${{ secrets.GITHUBTOKEN }}@github.com" >> ~/.git-credentials

        LAST_COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
        echo "Last Commit Message: $LAST_COMMIT_MESSAGE"
        echo "LAST_COMMIT_MESSAGE=$LAST_COMMIT_MESSAGE" >> $GITHUB_ENV
        git clone https://github.com/${{ env.GITHUB_USERNAME }}/${{ env.SKETCHES_REPORTS_REPO }}.git
        
        json_data=$(cat ${{ env.SKETCHES_REPORTS_PATH }}/*.json)
        num_boards=$(echo $json_data | jq '.boards | length')

        # loop through all boards
        for i in $(seq 0 $(($num_boards - 1))); do
          board=$(echo "$json_data" | jq -r ".boards[$i].board")
          num_sketches=$(echo "$json_data" | jq ".boards[$i].sketches | length")

          # loop through all sketches for each board
          for j in $(seq 0 $(($num_sketches - 1))); do
            sketch=$(echo "$json_data" | jq -r ".boards[$i].sketches[$j].name")
            project_name=$(echo "$json_data" | jq -r '(.commit_url | split("/")[-3]) + " - " + $sketch' --arg board "$board" --arg sketch "$sketch")

            echo "Project Name: $project_name"
            echo "PROJECT_NAME=$project_name" >> $GITHUB_ENV

            if [[ ! -d "${{ env.SKETCHES_REPORTS_REPO }}/$PROJECT_NAME" ]]; then
              mkdir "${{ env.SKETCHES_REPORTS_REPO }}/$PROJECT_NAME"
            fi

            cp ${{ env.SKETCHES_REPORTS_PATH }}/*.json "${{ env.SKETCHES_REPORTS_REPO }}/$PROJECT_NAME/"
          done
        done
        cd ${{ env.SKETCHES_REPORTS_REPO }}
        git add .
        git commit -m "Updated build reports" -m "Project name: $PROJECT_NAME" -m "Last Commit message: $LAST_COMMIT_MESSAGE"
        git push

# idea for what to do next:
# create a python script to parse the JSON and the markdown Readme of the ArduinoBuildReports repo
# then update the ReadMe with the latest build reports indicating if the build was successful or not for each project

# also, need to iterate through the json for each of the boards and sketches at line 57 instead of just the first one - done