name: Build on Commit Teensy
on:
  push:
    branches: [ "main" ]
    paths: [ "Teensy_4.0/*" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "Teensy_4.0/*" ]
env:
  # It's convenient to set variables for values used multiple times in the workflow
  SKETCHES_REPORTS_PATH: sketches-reports
  SKETCHES_REPORTS_ARTIFACT_NAME: sketches-reports
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Compile Arduino Sketches
      #uses: arduino/compile-sketches@v1.1.0
      uses: andrewmcdan/arduino-compile-sketches@v1.1
      with:
        platforms: |
          - name: "teensy:avr"
            source-url: "https://www.pjrc.com/teensy/package_teensy_index.json"
        fqbn: teensy:avr:teensy40
        libraries: |
          - name: "Adafruit BusIO"
          - name: "Adafruit GFX Library"
          - name: "Adafruit SSD1306"
          - name: "Adafruit GPS Library"
          - name: "Encoder"
          - name: "Adafruit BluefruitLE nRF51"
        verbose: true
        enable-warnings-report: true
        sketch-paths: |
          - Teensy_4.0
        sketches-report-path: ${{ env.SKETCHES_REPORTS_PATH }}
        enable-deltas-report: true
        github-token: ${{ secrets.GITHUBTOKEN }}
    
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}
        path: ${{ env.SKETCHES_REPORTS_PATH }}
    
    # - name: Download Artifacts
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}

    - name: Install jq for JSON parsing
      run: |
        ls -la
        cd ${{ env.SKETCHES_REPORTS_PATH }}
        ls -la
        sudo apt-get install jq
    
    - name: Read JSON and set variables
      run: |
        PROJECT_NAME=$(jq -r '.commit_url | split("/")[-2] + "_" + .boards[0].sketches[0].name' ${{ env.SKETCHES_REPORTS_PATH }}/*.json)
        echo "Project Name: $PROJECT_NAME"
        echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
    
    - name: Clone ArduinoBuildReports repo
      run: git clone https://github.com/andrewmcdan/ArduinoBuildReports.git

    - name: Check and create directory if not exists
      run: |
        if [[ ! -d "ArduinoBuildReports/$PROJECT_NAME" ]]; then
          mkdir ArduinoBuildReports/$PROJECT_NAME
        fi

    - name: Add or update JSON
      run: cp build-report/build-report.json ArduinoBuildReports/$PROJECT_NAME/

    - name: Commit and Push to ArduinoBuildReports
      run: |
        cd ArduinoBuildReports
        git config user.name "GitHub Action"
        git config user.email "andrewmcdan@gmail.com"
        git add .
        git commit -m "Updated build reports for $PROJECT_NAME"
        git push



